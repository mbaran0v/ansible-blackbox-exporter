---
- name: create blackbox_exporter system group
  group:
    name: "{{ blackbox_exporter_group }}"
    system: true
    state: present

- name: create blackbox_exporter system user
  user:
    name: "{{ blackbox_exporter_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ blackbox_exporter_group }}"
    createhome: false

- name: create blackbox_exporter directories
  file:
    path: "{{ blackbox_exporter_root_dir }}"
    state: directory
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    mode: 0755
  with_items:
    - "{{ blackbox_exporter_root_dir }}"

- name: check if installed
  stat:
    path: "{{ blackbox_exporter_root_dir }}/releases/{{ blackbox_exporter_version }}/blackbox_exporter"
  register: blackbox_exporter_bin

- name: remove blackbox temporary deploy dir
  file:
    path: "{{ blackbox_exporter_root_dir }}/tmp"
    state: absent

- name: create blackbox temporary deploy dir
  file:
    path: "{{ blackbox_exporter_root_dir }}/tmp"
    state: directory

- name: download blackbox binary to temporary folder
  get_url:
    url: "{{ blackbox_exporter_download_url }}"
    dest: "{{ blackbox_exporter_root_dir }}/tmp/{{ blackbox_exporter_archive_name }}"
    remote_src: true
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  when: not blackbox_exporter_bin.stat.exists|bool or blackbox_exporter_force_install|bool

- name: unpack blackbox binaries
  unarchive:
    src: "{{ blackbox_exporter_root_dir }}/tmp/{{ blackbox_exporter_archive_name }}"
    dest: "{{ blackbox_exporter_root_dir }}/tmp"
    remote_src: yes
    creates: "{{ blackbox_exporter_root_dir }}/tmp/{{ blackbox_exporter_extracted_dir }}/blackbox_exporter"
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    mode: 0755
  when: not blackbox_exporter_bin.stat.exists|bool or blackbox_exporter_force_install|bool

- name: initialize the deploy root and gather facts
  deploy_helper:
    path: "{{ blackbox_exporter_root_dir }}"
    release: "{{ blackbox_exporter_version }}"
    state: present
  when: not blackbox_exporter_bin.stat.exists|bool or blackbox_exporter_force_install|bool

- name: create release directory
  file:
    dest: "{{ deploy_helper.new_release_path }}"
    state: directory
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    mode: 0750
  when: not blackbox_exporter_bin.stat.exists|bool or blackbox_exporter_force_install|bool

- name: configure blackbox exporter
  template:
    src: blackbox_exporter.yml.j2
    dest: "{{ deploy_helper.new_release_path }}/blackbox_exporter.yml"
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    mode: 0644
  notify:
    - reload blackbox exporter

- name: propagate blackbox binaries
  command: mv {{ blackbox_exporter_root_dir }}/tmp/{{ blackbox_exporter_extracted_dir }}/{{ item }} {{ deploy_helper.new_release_path }}
  tags: skip_ansible_lint
  with_items:
    - blackbox_exporter
  when: not blackbox_exporter_bin.stat.exists|bool or blackbox_exporter_force_install|bool

- name: create systemd service unit
  template:
    src: blackbox_exporter.service.j2
    dest: /etc/systemd/system/blackbox_exporter.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart blackbox exporter

- name: finalize the deploy, removing the unfinished file and switching the symlink
  deploy_helper:
    path: "{{ blackbox_exporter_root_dir }}"
    release: "{{ deploy_helper.new_release }}"
    state: finalize
  notify:
    - restart blackbox exporter
  when: not blackbox_exporter_bin.stat.exists|bool or blackbox_exporter_force_install|bool

- name: ensure blackbox_exporter service is started and enabled
  systemd:
    name: blackbox_exporter
    state: started
    enabled: true
